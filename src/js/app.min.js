/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _myClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./myClass */ "./src/js/myClass.js");



let textarea = document.getElementById("interactiveTextArea");
let level = 5;
let characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
let textToType;
let paused =false;

$(document).ready(function(){
    console.log("loaded!");
    //init
    let manager = new _myClass__WEBPACK_IMPORTED_MODULE_0__["GameManager"]();
    let pooler = new _myClass__WEBPACK_IMPORTED_MODULE_0__["ObjectPooler"]();
    let spawner = new _myClass__WEBPACK_IMPORTED_MODULE_0__["CharacterSpawner"](pooler); 
    let timer = new _myClass__WEBPACK_IMPORTED_MODULE_0__["Timer"](4);
    //set start program
    onStart();
  
    
    //update
    //paused = true;
    if(!paused){
        setInterval(function(){ 
            textToType = randomString();
            manager._numberOfSpawn +=1;
            spawner.Spawn(textToType);
        }, manager.GameSpeed);
    }
   //timer 
   if(timer.Start == true){
        setInterval(function(){
            timer.CountDown();
            document.getElementById("timer").children[1].
            textContent = (timer.Minutes < 10? "0":"") + "" + timer.Minutes + ":" + (timer.Seconds <10?"0":"") + timer.Seconds;
        // console.log(timer.Minutes + ":" + timer.Seconds);
        },1000);
   }
   
    //keypress
    $(textarea).keypress(function(e){
        if(e.which == 13){
            let content = this.value;
            let lastLine = content.substr(content.lastIndexOf("\n")+1);
            console.log("input: " + lastLine);
            checkAnswer(lastLine);
        }
    });

    function checkAnswer(value){
        let found = false;
        console.log(pooler.ObjectSet);
        for(const obj of pooler.ObjectSet.values()){
            if(obj.Id == value && obj.Active){
                obj.Active = false;
                found = true;
                document.getElementById(obj.Id).remove();
                manager.HitIncrease();
                document.getElementById("hit").children[1].textContent = manager.Hit;
                console.log("correct!");
                break;
            }
            // console.log(obj.Id);
        }
        if(!found){
            manager.MissIncrease();
            document.getElementById("miss").children[1].textContent = manager.Miss;
            console.log("wrong!");
        }
    }

    function randomString(){
        let arr=[];
        for(let i=0; i<level; i++){
           arr.push(characters.charAt(Math.floor(Math.random() * characters.length)));
        }
        return arr.join('');
     
    }

    function onStart(){
        timer.Start = true;
        textToType = randomString();
        manager._numberOfSpawn +=1;
        spawner.Spawn(textToType);
        textarea.value ="";
        document.getElementById("timer").children[1].
        textContent = (timer.Minutes < 10? "0":"") + "" + timer.Minutes + ":" + (timer.Seconds <10?"0":"") + timer.Seconds;
    }

});

/***/ }),

/***/ "./src/js/myClass.js":
/*!***************************!*\
  !*** ./src/js/myClass.js ***!
  \***************************/
/*! exports provided: GameManager, GameObject, Character, ObjectPooler, CharacterSpawner, Timer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GameManager", function() { return GameManager; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GameObject", function() { return GameObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Character", function() { return Character; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectPooler", function() { return ObjectPooler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CharacterSpawner", function() { return CharacterSpawner; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Timer", function() { return Timer; });
class GameManager{
    constructor(){
        this._numberOfSpawn = 0;
        this._gameSpeed = 500;
        this._hit = 0;
        this._miss = 0;
    }
    get Hit(){
        return this._hit;
    }
    HitIncrease(){
        this._hit++;
    }
    get Miss(){
        return this._miss;
    }
    MissIncrease(){
        this._miss++;
    }
    get GameSpeed(){
        return this._gameSpeed;
    }
    set GameSpeed(value){
        this._gameSpeed = value;
    }
    get numberOfSpawn(){
        return this.numberOfSpawn;
    }
    set numberOfSpawn(numberOfSpawn){
        this._numberOfSpawn = numberOfSpawn;
    }
}
class GameObject{
    constructor(){
        this._active = true;
        this._name = "gameObject";
    }
    get Active(){
        return this._active;
    }
    set Active(value){
        this._active = value;
    }
    get Name(){
        return this._name;
    }
    set Name(value){
        this._name = value;
    }
}
class Character extends GameObject{
    constructor(id){
        super();
        this._id = id;
    }
    get Id(){
        return this._id;
    }
    set Id(value){
        this.id =value;
    }
}
class ObjectPooler{
    constructor(){
        this._objectsMap = new Map();
        this._setObject = new Set();
        this._arrObject = [];
    }
    get ArrayObject(){
        return this._arrObject;
    }
    set ArrayObject(value){
        this._arrObject = value;
    }
    get ObjectSet(){
        return this._setObject;
    }
    set ObjectSet(value){
        this._setObject = value;
    }
    get ObjectMap(){
        return this._objectsMap;
    }
    set ObjectMap(value){
        this._objectsMap = value;
    }
    Pool(character){
        //this._objectsMap.set(character.Id, character);
        this._setObject.add(character);
    }
}
class CharacterSpawner{
    constructor(pooler){
      this._pooler = pooler;
    }
   
     Spawn(characters) {
    
        let para = document.createElement("p");
        let node = document.createTextNode(characters);
        para.classList.add("character-game-object");
        para.id = characters;
        para.appendChild(node);

        let element = document.getElementById("main-display");
        element.appendChild(para);

        let _obj = null;
      
        for(const obj of this._pooler.ObjectSet.values()){
            if(obj.Active == false){
                obj.Active = true;
                obj._id = characters;
                _obj = obj;
                break;
            }
            // console.log(obj.Id);
        }
        if(_obj == null){
            this._pooler.Pool(new Character(characters));
        }
        //return new Character(characters);
    }
}
class Timer{
    constructor(countDownInSec){
        this._tempCountDownInsec = countDownInSec;
        this._countDownInSec = countDownInSec;
        this._minutes = Math.floor(countDownInSec / 60);
        this._seconds = countDownInSec - (this._minutes * 60);
        this._start = false;
    }

    CountDown(){
        //setInterval(function(){
            this._countDownInSec = this._countDownInSec < 0? 0:this._countDownInSec -= 1;
            if(this._countDownInSec >= 0){
                this._minutes = Math.floor(this._countDownInSec / 60);
                this._seconds = this._countDownInSec - (this._minutes * 60);
            }else{
                this._start = false;
            }
           
            //console.log(this._countDownInSec);

        //},1000);
    }
    Start(){
        this._start = true;
    }
    Pause(){
        this._start = false;
    }
    Reset(){
        this._start = false;
        this._countDownInSec = this._tempCountDownInsec;
        this._minutes = Math.floor(countDownInSec / 60);
        this._seconds = countDownInSec - (this._minutes * 60);
    }
    get Minutes(){
        return this._minutes < 0? 0:this._minutes;
    }
    get Seconds(){
        return this._seconds < 0? 0:this._seconds;
    }
    
}


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,